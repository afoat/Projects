<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="Foat.Hashing.ConfigSection">
      <section name="MinimalPerfectHash" type="Foat.Hashing.Configuration.MinimalPerfectHashSettings, Foat.Hashing" />
      <section name="HashFunctionFactory" type="Foat.Hashing.Configuration.HashFunctionFactorySettings, Foat.Hashing" />
    </sectionGroup>
    <sectionGroup name="Foat.Puzzles.Solutions.RubiksCube.ConfigSection">
      <section name="RubiksCubeSolution" type="Foat.Puzzles.Solutions.RubiksCube.Configuration.RubiksCubeSolutionSettings, Foat.Puzzles.Solutions"/>
    </sectionGroup>
    <sectionGroup name="RubiksCubePatternSetGenerator.ConfigSection">
      <section name="Settings" type="RubiksCubePatternSetGenerator.Configuration.RubiksCubePatternSetGeneratorSettings, RubiksCubePatternSetGenerator"/>
    </sectionGroup>
  </configSections>
  <runtime>
    <gcAllowVeryLargeObjects enabled="true" /> 
  </runtime>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
    </startup>
  <Foat.Hashing.ConfigSection>
    <HashFunctionFactory HashFunction32BitType="Foat.Hashing.FnvHash, Foat.Hashing" />
    <!-- 
    MemoryCoefficient:
        Controls how many buckets in the first step of the minimal perfect hash. Smaller values will
        use less memory but will make it harder (or even impossible) to find an MPH. Larger values
        use more memory, will finish more reliably, and will run faster.
        
    PercentOfFrontLoadedKeys
        If you have 1,000,000 keys with a PercentOfFrontLoadedKeys set to 0.35, then 350,000 of those 
        keys will be squished into the front buckets, making the front buckets denser then the back buckets.
        The buckets at the front are easier to find an MPH for so it makes sense to squish lots of keys into 
        them. A larger value will slow things down at the beginning and might make it impossible to find an MPH.
        A smaller value will slow things down at the end and might make it impossible to find an MPH.
      
    PercentOfFrontLoadedBuckets
        If you have 1,000,000 keys of which 350,000 will be "front loaded" then the PercentOfFrontLoadedBuckets 
        determines how many buckets at the front will be used for the 350,000 front loaded keys. So if the 
        1,000,000 keys have 100,000 buckets then a PercentOfFrontLoadedBuckets value of 0.15 will mean that the 
        350,000 front loaded keys will be squished into the first 15,000 buckets.
    -->
    <MinimalPerfectHash
      MemoryCoefficient="4.5" 
      PercentOfFrontLoadedKeys="0.35"
      PercentOfFrontLoadedBuckets="0.125"
    />
  </Foat.Hashing.ConfigSection>
  <RubiksCubePatternSetGenerator.ConfigSection>
    <Settings
      PatternSetPath="C:\Users\afoat\Source\Repo\Projects\RubiksCubeConsoles\Pattern Databases"
      NumberOfPatternGeneratingThreads="1"
    />
  </RubiksCubePatternSetGenerator.ConfigSection>
  <system.diagnostics>
    <trace autoflush="true" indentsize="4">
      <listeners>
        <add name="ConsoleListener" type="System.Diagnostics.ConsoleTraceListener" />
      </listeners>
    </trace>
  </system.diagnostics>
</configuration>